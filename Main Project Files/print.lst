


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; SSD1306_OutChar   outputs a single 8-bit ASCII charact
                       er
   10 00000000         ; SSD1306_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           SSD1306_OutChar
   13 00000000                 IMPORT           SSD1306_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutDecCoin
   16 00000000                 PRESERVE8
   17 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 THUMB
   19 00000000         
   20 00000000         
   21 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   22 00000000         ; Output a 32-bit number in unsigned decimal format
   23 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   24 00000000         ; Output: none
   25 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   26 00000000        C 
                       Pointer RN               12
   27 00000000 3B9ACA00 
                       MAXDIV  EQU              1000000000
   28 00000000         LCD_OutDec
   29 00000000 B083            SUB              SP, #12     ; 12 1 byte contain
                                                            ers for each digit
   30 00000002 46EC            MOV              Pointer, SP ; Setting R11 as po
                                                            inter, FP 
   31 00000004 B570            PUSH{R4-R6,LR}
   32 00000006         
   33 00000006 F04F 0200       MOV              R2, #0      ; CounterBit
   34 0000000A 4C33            LDR              R4, =MAXDIV
   35 0000000C F04F 050A       MOV              R5, #10
   36 00000010 4601            MOV              R1, R0
   37 00000012         DecimalLoop
   38 00000012 460B            MOV              R3, R1      ; R1 contains total
                                                             sum 
   39 00000014 FBB3 F3F4       UDIV             R3, R4      ; Sum divided by R4
                                                            
   40 00000018 F80C 3002       STRB             R3, [Pointer, R2] ; That sum is
                                                             stored in pointer 
                                                            digit 
   41 0000001C FB03 F304       MUL              R3, R4      ; Divisor multiplie
                                                            d by total number o
                                                            f that place
   42 00000020 EBA1 0103       SUB              R1, R3      ; R1 now holds the 



ARM Macro Assembler    Page 2 


                                                            sum minus the digit
                                                            s accounted for
   43 00000024 F102 0201       ADD              R2, #1      ; Counter increment
                                                            
   44 00000028 FBB4 F4F5       UDIV             R4, R5      ; Move to next digi
                                                            t
   45 0000002C 2A0A            CMP              R2, #10     ; Jump if max digit
                                                            s
   46 0000002E D1F0            BNE              DecimalLoop
   47 00000030         
   48 00000030 F04F 0100       MOV              R1, #0
   49 00000034 F88C 100A       STRB             R1, [Pointer, #10] 
                                                            ; Sentinel bit
   50 00000038         ;Where is the top of the stack
   51 00000038         FindTop
   52 00000038 F81C 3001       LDRB             R3, [Pointer, R1]
   53 0000003C F101 0101       ADD              R1, #1
   54 00000040 290A            CMP              R1, #10
   55 00000042 D001            BEQ              FirstDigit
   56 00000044 2B00            CMP              R3, #0
   57 00000046 D0F7            BEQ              FindTop     ; Pointer + R1 - 1 
                                                            points to Stack top
                                                            
   58 00000048         
   59 00000048         FirstDigit
   60 00000048 F1A1 0101       SUB              R1, #1      ; Fixing counter to
                                                             be accurate
   61 0000004C F04F 0000       MOV              R0, #0
   62 00000050 EB0C 0001       ADD              R0, Pointer, R1 ; Top of the st
                                                            ack in R0, for BL O
                                                            ut
   63 00000054         
   64 00000054         ASCIIReplace
   65 00000054 F81C 3001       LDRB             R3, [Pointer, R1] ; Convert Eve
                                                            rything to Ascii
   66 00000058 F103 0330       ADD              R3, #0x30
   67 0000005C F80C 3001       STRB             R3, [Pointer, R1]
   68 00000060 F101 0101       ADD              R1, #1
   69 00000064 290A            CMP              R1, #10
   70 00000066 D1F5            BNE              ASCIIReplace
   71 00000068 E8BD 4070       POP{R4-R6,LR}
   72 0000006C B003            ADD              SP, #12
   73 0000006E 4600            MOV              R0, R0
   74 00000070 4770            BX               LR
   75 00000072         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   76 00000072         
   77 00000072 00000000 
                       N       EQU              0
   78 00000072 00000004 
                       CNT     EQU              4
   79 00000072         LCD_OutDecCoin
   80 00000072 B082            SUB              SP, #8
   81 00000074 46EB            MOV              R11, SP
   82 00000076 B510            PUSH{LR,         R4}
   83 00000078 F8CB 0000       STR              R0, [R11, #N]
   84 0000007C F04F 0100       MOV              R1, #0
   85 00000080 F8CB 1004       STR              R1, [R11, #CNT]
   86 00000084 F04F 010A       MOV              R1, #10
   87 00000088         loop



ARM Macro Assembler    Page 3 


   88 00000088 F8DB 2004       LDR              R2, [R11, #CNT]
   89 0000008C F102 0201       ADD              R2, R2, #1
   90 00000090 F8CB 2004       STR              R2, [R11, #CNT]
   91 00000094         
   92 00000094 F8DB 3000       LDR              R3, [R11, #N]
   93 00000098 461C            MOV              R4, R3
   94 0000009A FBB3 F3F1       UDIV             R3, R3, R1
   95 0000009E F8CB 3000       STR              R3, [R11, #N]
   96 000000A2 FB03 F301       MUL              R3, R3, R1
   97 000000A6 EBA4 0403       SUB              R4, R4, R3
   98 000000AA B410            PUSH{R4}
   99 000000AC F8DB 3000       LDR              R3, [R11, #N]
  100 000000B0 2B00            CMP              R3, #0
  101 000000B2 D1E9            BNE              loop
  102 000000B4         BACK
  103 000000B4 BC10            POP{R4}
  104 000000B6 F104 0030       ADD              R0, R4, #0x30
  105 000000BA F7FF FFFE       BL               SSD1306_OutChar
  106 000000BE F8DB 2004       LDR              R2, [R11, #CNT]
  107 000000C2 F1A2 0201       SUB              R2, R2, #1
  108 000000C6 F8CB 2004       STR              R2, [R11, #CNT]
  109 000000CA 2A00            CMP              R2, #0
  110 000000CC D1F2            BNE              BACK
  111 000000CE         
  112 000000CE E8BD 4010       POP{LR,          R4}
  113 000000D2 B002            ADD              SP, #8
  114 000000D4         
  115 000000D4 4770            BX               LR
  116 000000D6         
  117 000000D6 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  118 000000D8                 END                          ; end of file
              3B9ACA00 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -I.\RTE\_Lab10 -IC:\Users\looha\AppData\Loca
l\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Users\looha\AppData\Local\A
rm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__UVISION_VERS
ION SETA 534" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --pr
edefine="_RTE_ SETA 1" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
ASCIIReplace 00000054

Symbol: ASCIIReplace
   Definitions
      At line 64 in file Print.s
   Uses
      At line 70 in file Print.s
Comment: ASCIIReplace used once
BACK 000000B4

Symbol: BACK
   Definitions
      At line 102 in file Print.s
   Uses
      At line 110 in file Print.s
Comment: BACK used once
DecimalLoop 00000012

Symbol: DecimalLoop
   Definitions
      At line 37 in file Print.s
   Uses
      At line 46 in file Print.s
Comment: DecimalLoop used once
FindTop 00000038

Symbol: FindTop
   Definitions
      At line 51 in file Print.s
   Uses
      At line 57 in file Print.s
Comment: FindTop used once
FirstDigit 00000048

Symbol: FirstDigit
   Definitions
      At line 59 in file Print.s
   Uses
      At line 55 in file Print.s
Comment: FirstDigit used once
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 28 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutDecCoin 00000072

Symbol: LCD_OutDecCoin



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 79 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutDecCoin used once
loop 00000088

Symbol: loop
   Definitions
      At line 87 in file Print.s
   Uses
      At line 101 in file Print.s
Comment: loop used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

CNT 00000004

Symbol: CNT
   Definitions
      At line 78 in file Print.s
   Uses
      At line 85 in file Print.s
      At line 88 in file Print.s
      At line 90 in file Print.s
      At line 106 in file Print.s
      At line 108 in file Print.s

MAXDIV 3B9ACA00

Symbol: MAXDIV
   Definitions
      At line 27 in file Print.s
   Uses
      At line 34 in file Print.s
Comment: MAXDIV used once
N 00000000

Symbol: N
   Definitions
      At line 77 in file Print.s
   Uses
      At line 83 in file Print.s
      At line 92 in file Print.s
      At line 95 in file Print.s
      At line 99 in file Print.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SSD1306_OutChar 00000000

Symbol: SSD1306_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 105 in file Print.s
Comment: SSD1306_OutChar used once
SSD1306_OutString 00000000

Symbol: SSD1306_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: SSD1306_OutString unused
2 symbols
350 symbols in table
